{"version":3,"sources":["App.js","index.js"],"names":["App","useState","matches","setMatches","findMatches","rows","map","row1","row1_email","row1_gender","row1_age","row1_pref","row1_interest","row1_religion_important","row1_religion","row1_children","row1_politics_important","row1_politics","filter","row2","row2_email","row2_gender","row2_age","row2_pref","row2_interest","row2_religion_important","row2_religion","row2_children","row2_politics_important","row2_politics","row","match","length","uniq","unshift","className","type","name","accept","onChange","e","readable","target","files","papa","parse","header","complete","data","handleChange","Button","variant","onClick","csvContent","join","console","log","encodedUri","encodeURI","window","open","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAwFeA,MAjFf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,KAsBPC,EAAc,SAAAC,GAClB,IAoCIH,EApCSG,EAAKC,KAAI,SAAAC,GACpB,IAAMC,EAAaD,EAAK,iBAClBE,EAAcF,EAAK,UACnBG,EAAWH,EAAK,aAChBI,EAAYJ,EAAK,+BACjBK,EAAgBL,EAAK,2CACrBM,EAA0BN,EAAK,8DAC/BO,EAAgBP,EAAK,0BACrBQ,EAAgBR,EAAK,iCACrBS,EAA0BT,EAAK,0EAC/BU,EAAgBV,EAAK,mCAC3B,MAAQ,CACNC,EACAH,EAAKa,QAAO,SAAAC,GACV,IAAMC,EAAaD,EAAK,iBAClBE,EAAcF,EAAK,UACnBG,EAAWH,EAAK,aAChBI,EAAYJ,EAAK,+BACjBK,EAAgBL,EAAK,2CACrBM,EAA0BN,EAAK,8DAC/BO,EAAgBP,EAAK,0BACrBQ,EAAgBR,EAAK,iCACrBS,EAA0BT,EAAK,0EAC/BU,EAAgBV,EAAK,mCAC3B,OACGX,IAAeY,GACfT,IAAcU,GAAiBZ,IAAgBc,GAC/CX,IAAkBU,GAAcZ,IAAac,IAChB,QAA5BX,GAAiE,QAA5BY,EAAqCX,IAAkBY,EAAgB,QAChF,QAA5BV,GAAiE,QAA5BY,EAAqCX,IAAkBY,EAAgB,OAC7Gd,IAAkBY,KAEpBrB,KAAI,SAAAwB,GAAG,OAAIA,EAAI,wBAIHZ,QAAO,SAAAa,GAAK,OAAIA,EAAM,GAAGC,OAAS,KAClC1B,KAAI,SAAAyB,GAAK,MAAI,CAACA,EAAM,GAAIE,eAAKF,EAAM,QAGtD,OADA7B,EAAQgC,QAAQ,CAAC,QAAS,YACnBhC,GAGT,OACE,yBAAKiC,UAAU,OACb,yBAAKA,UAAU,mBACb,6CACA,yBAAKA,UAAU,SACb,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,OAAO,OAAOC,SAAU,SAAAC,GAAC,OAnE3C,SAAAA,GAAM,IAEnBC,EADYD,EAAEE,OAAZC,MACe,GACvBC,IAAKC,MAAMJ,EAAU,CACnBK,QAAQ,EACRC,SAAU,SAAAC,GACR7C,EAAWC,EAAY4C,EAAKA,UA6DkCC,CAAaT,MACzE,kBAACU,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAzDd,WAClB,IAAIC,EAAa,+BAAiCnD,EAAQI,KAAI,SAAAkC,GAAC,OAAIA,EAAEc,KAAK,QAAMA,KAAK,MACrFC,QAAQC,IAAIH,GACZ,IAAMI,EAAaC,UAAUL,GAC7BM,OAAOC,KAAKH,KAqDN,wBC1EVI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.88df100b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button'\nimport papa from 'papaparse'\nimport { uniq } from 'lodash'\n\nfunction App() {\n\n  const [matches, setMatches] = useState([])\n\n  const handleChange = e => {\n    const { files } = e.target\n    const readable = files[0]\n    papa.parse(readable, {\n      header: true,\n      complete: data => {\n        setMatches(findMatches(data.data))\n      }\n    });\n  }\n  // TODO: Return error if no file selected\n  const handleClick = () => {\n    let csvContent = \"data:text/csv;charset=utf-8,\" + matches.map(e => e.join(\",\")).join(\"\\n\")\n    console.log(csvContent)\n    const encodedUri = encodeURI(csvContent);\n    window.open(encodedUri);\n  }\n\n  const findMatches = rows => {\n    const data = rows.map(row1 => {\n      const row1_email = row1['Email Address']\n      const row1_gender = row1['I am a']\n      const row1_age = row1['I am aged']\n      const row1_pref = row1['I am interested in dating a']\n      const row1_interest = row1['I am interested in dating someone aged ']\n      const row1_religion_important = row1['It is important that my partner is the same religion as me']\n      const row1_religion = row1['What religion are you?']\n      const row1_children = row1['Do you want to have children?']\n      const row1_politics_important = row1['It is important that my partner has the same political beliefs as I do']\n      const row1_politics = row1['If so, my political beliefs are']\n      return ([\n        row1_email,\n        rows.filter(row2 => { // TODO: trim and standardize case\n          const row2_email = row2['Email Address']\n          const row2_gender = row2['I am a']\n          const row2_age = row2['I am aged']\n          const row2_pref = row2['I am interested in dating a']\n          const row2_interest = row2['I am interested in dating someone aged ']\n          const row2_religion_important = row2['It is important that my partner is the same religion as me']\n          const row2_religion = row2['What religion are you?']\n          const row2_children = row2['Do you want to have children?']\n          const row2_politics_important = row2['It is important that my partner has the same political beliefs as I do']\n          const row2_politics = row2['If so, my political beliefs are']\n          return (\n            (row1_email !== row2_email) && // Cannot match with yourself\n            (row1_pref === row2_gender) && (row1_gender === row2_pref) &&\n            (row1_interest === row2_age) && (row1_age === row2_interest) &&\n            ((row1_religion_important === 'Yes' || row2_religion_important === 'Yes') ? row1_religion === row2_religion : null) &&\n            ((row1_politics_important === 'Yes' || row2_politics_important === 'Yes') ? row1_politics === row2_politics : null) &&\n            (row1_children === row2_children) \n          )\n        }).map(row => row['Email Address'])\n      ])\n    })\n    // TODO: Only include first entry if there are multiple\n    let matches = data.filter(match => match[1].length > 0) // Remove rows with no matches\n                      .map(match => [match[0], uniq(match[1])])\n    // Add headers\n    matches.unshift(['email', 'matches'])\n    return matches\n  } \n\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <h1>#CFNC Matches</h1>\n        <div className=\"input\">\n          <input type=\"file\" name=\"file\" accept=\".csv\" onChange={e => handleChange(e)}/>\n          <Button variant=\"success\" onClick={handleClick}>\n            Download Matches\n          </Button> \n        </div>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}