{"version":3,"sources":["utils.js","matchFilters.js","App.js","exportToCsv.js","index.js"],"names":["agePref","relImportant","wantChildren","mindChildren","polImportant","politics","cityPref","App","useState","matches","setMatches","fileUploaded","setFileUploaded","findMatches","rows","output","i","length","j","splice","indexOf","oneSided","array","a","b","push","allPermutations","map","row1","filter","row2","emailFilter","matchGender","row1CityPref","split","row2CityPref","includes","matchCity","row1AgePref","row2AgePref","matchAge","matchMindChildren","matchPolitics","matchReligion","matchWantChildren","row","match","console","log","uniqBy","item","JSON","stringify","className","type","name","accept","onChange","e","readable","target","files","papa","parse","header","complete","data","handleChange","Button","variant","onClick","fileName","d","Date","isoDate","toISOString","slice","dateTime","getHours","getMinutes","getSeconds","formatCsvName","filename","processRow","finalVal","innerValue","toString","toLocaleString","result","replace","search","csvFile","blob","Blob","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToCsv","alert","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81b2c423.chunk.js","sourcesContent":["// Format as all possible permutations of matches\nexport const allPermutations = array => {\n  let output = []\n  for (let i=0; i<array.length; i++) {\n    const a = array[i][0]\n    const b = array[i][1]\n    if (b.length > 1) {\n      for (let j=0; j<b.length; j++) {\n        output.push([a, b[j]])\n      }\n    } else {\n      output.push([a, b[0]])\n    }\n  }\n  return output\n} \n\n// Only include one side of matches\nexport const oneSided = output => {\n  for (let i=0; i<output.length; i++) {\n    for (let j=0; j<output.length; j++) {\n      if (output[i][0] === output[j][1] && output[i][1] === output[j][0]) {\n        output.splice(output.indexOf(output[j]), 1)\n      }\n    }\n  }\n  return output\n}","// Convert form column headers into variables\nconst email = 'Email Address'\nconst gender = 'I am a'\nconst age = 'I am aged'\nconst genderPref = 'I am interested in dating a'\nconst agePref = 'I am interested in dating someone aged '\nconst relImportant = 'It is important that my partner is the same religion as me'\nconst religion = 'What religion are you?'\nconst wantChildren = 'Do you want to have children?'\nconst mindChildren = 'Do you mind if your match has children?'\nconst haveChildren = 'Do you have children?'\nconst polImportant = 'It is important that my partner has the same political beliefs as I do'\nconst politics = 'If so, my political beliefs are'\nconst city = 'City'\nconst cityPref = 'Are you open to dating someone from another city? If so, what cities?'\n\nexport const emailFilter = (row1, row2) => {\n  return row1[email] !== row2[email]\n}\n\nexport const matchGender = (row1, row2) => {\n  return (row1[genderPref] === row2[gender] && row1[gender] === row2[genderPref])\n}\n\nexport const matchAge = (row1, row2) => {\n  const row1AgePref = row1[agePref] ? row1[agePref].split(\", \") : []\n  const row2AgePref = row1[agePref] ? row2[agePref].split(\", \") : []\n\n  return row1AgePref.includes(row2[age]) && row2AgePref.includes(row1[age])\n}\n\nexport const matchCity = (row1, row2) => {\n  const row1CityPref = row1[cityPref] ? [...row1[cityPref].split(\", \"), row1[city]] : []\n  const row2CityPref = row2[cityPref] ? [...row2[cityPref].split(\", \"), row2[city]] : []\n\n  return row1CityPref.includes(row2[city]) && row2CityPref.includes(row1[city])\n}\n\nexport const matchMindChildren = (row1, row2) => {\n  if (\n      (row1[mindChildren] === \"Yes\" && row2[haveChildren] === \"Yes\") ||\n      (row2[mindChildren] === \"Yes\" && row1[haveChildren] === 'Yes')\n     ) {\n    return false\n  } else {\n    return true\n  }\n}\n\nexport const matchWantChildren = (row1, row2) => {\n  if (row1[wantChildren] !== \"Unsure\" && row2[wantChildren] !== \"Unsure\") {\n    return row1[wantChildren] === row2[wantChildren]\n  } else {\n    return true\n  }\n}\n\nexport const matchReligion = (row1, row2) => {\n  if (row1[relImportant] === 'Yes' || row2[relImportant] === 'Yes') {\n    return row1[religion] === row2[religion]\n  } else {\n    return true\n  }\n}\n\nexport const matchPolitics = (row1, row2) => {\n  if (\n      (row1[polImportant] === 'Yes' && row1[politics] !== 'Moderate') || \n      (row2[polImportant] === 'Yes' && row2[politics] !== 'Moderate')\n     ) {\n    return row1[politics] === row2[politics]\n  } else {\n    return true\n  }\n}","import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button'\nimport papa from 'papaparse'\nimport { uniqBy } from 'lodash'\nimport exportToCsv from './exportToCsv.js'\nimport { allPermutations, oneSided } from './utils.js'\nimport { emailFilter,\n         matchGender, \n         matchAge, \n         matchCity, \n         matchMindChildren, \n         matchWantChildren, \n         matchReligion, \n         matchPolitics \n       } from './matchFilters.js'\n\nfunction App() {\n\n  const [matches, setMatches] = useState([])\n  const [fileUploaded, setFileUploaded] = useState(false)\n\n  const handleChange = e => {\n    const { files } = e.target\n    const readable = files[0]\n    setFileUploaded(true)\n    papa.parse(readable, {\n      header: true,\n      complete: data => {\n        setMatches(findMatches(data.data))\n      }\n    });\n  }\n\n  const formatCsvName = () => {\n    const d = new Date()\n    const isoDate = d.toISOString().slice(0, 10)\n    const dateTime = `${isoDate}_${d.getHours()}_${d.getMinutes()}_${d.getSeconds()}`\n    return `matches_${dateTime}.csv`\n  }\n  \n  const handleClick = () => {\n    const fileName = formatCsvName()\n    if (!fileUploaded) {\n      alert(\"Please choose a file.\")\n    } else {\n      exportToCsv(fileName, matches)\n    }\n  }\n\n  const findMatches = rows => {\n    const email = 'Email Address'\n    const matches = rows.map(row1 => {\n      return ([\n        row1[email],\n        rows.filter(row2 => {\n          return (\n            emailFilter(row1, row2) &&\n            matchGender(row1, row2) &&\n            matchCity(row1, row2) &&\n            matchAge(row1, row2) &&\n            matchMindChildren(row1, row2) &&\n            matchPolitics(row1, row2) &&\n            matchReligion(row1, row2) &&\n            matchWantChildren(row1, row2) \n          )\n        }).map(row => row[email])\n      ])\n    }).filter(match => match[1].length > 0) // Remove rows with no matches\n\n    // console.log(\"matches\", matches)  \n\n    const output = oneSided(allPermutations(matches))\n\n    console.log(\"output\", uniqBy(output, item => JSON.stringify(item)))\n\n    // Only include unique entries\n    return uniqBy(output, item => JSON.stringify(item))\n  } \n\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <h1>#CFNC Matches</h1>\n        <div className=\"input\">\n          <input type=\"file\" name=\"file\" accept=\".csv\" onChange={e => handleChange(e)}/>\n          <Button variant=\"success\" onClick={handleClick}>\n            Download Matches\n          </Button> \n        </div>\n        <h4>Matching Criteria:</h4>\n        <div className=\"criteria\"> \n          <ol>\n            <li>\n              <strong>Gender Preference</strong>: Gender should equal gender preference.\n            </li>  \n            <li>\n              <strong>Age preference</strong>: Age should match ANY age in age preferences. \n            </li>\n            <li>\n              <strong>City</strong>: City should match ANY city in city preferences. \n            </li>  \n            <li>\n              <strong>Minds children</strong>: If either person minds chidren, their match should not have children.\n            </li>\n            <li>\n              <strong>Wants children</strong>: If answer is \"Yes\" or \"No\", match on this criteria. If \"Unsure\", ignore this criteria.\n            </li>\n            <li>\n              <strong>Religion</strong>: If religion is important to either person, match on religion.\n            </li>\n            <li>\n              <strong>Politics</strong>: If politics is important to either person AND that person is NOT a Moderate, match on politics.\n            </li>\n          </ol>\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default App\n","export default function exportToCsv(filename, rows) {\n  const processRow = function (row) {\n    var finalVal = '';\n    for (var j = 0; j < row.length; j++) {\n      var innerValue = row[j] === null ? '' : row[j].toString();\n      if (row[j] instanceof Date) {\n          innerValue = row[j].toLocaleString();\n      };\n      var result = innerValue.replace(/\"/g, '\"\"');\n      if (result.search(/(\"|,|\\n)/g) >= 0)\n          result = '\"' + result + '\"';\n      if (j > 0)\n          finalVal += ',';\n      finalVal += result;\n    }\n    return finalVal + '\\n';\n  };\n\n  var csvFile = '';\n  for (var i = 0; i < rows.length; i++) {\n    csvFile += processRow(rows[i]);\n  }\n\n  var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) { // IE 10+\n      navigator.msSaveBlob(blob, filename);\n  } else {\n    var link = document.createElement(\"a\");\n    if (link.download !== undefined) { // feature detection\n      // Browsers that support HTML5 download attribute\n      var url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}\n\n// Credit: https://jsfiddle.net/jossef/m3rrLzk0/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}