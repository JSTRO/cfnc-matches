{"version":3,"sources":["App.js","exportToCsv.js","index.js"],"names":["App","useState","matches","setMatches","fileUploaded","setFileUploaded","email","gender","age","age_pref","religion_important","want_children","politics_important","politics","ageChoices","findMatches","rows","map","row1","filter","row2","indexOf","row","match","length","console","log","allPerms","array","output","i","a","b","j","push","allPermutations","oneSidedOutput","splice","oneSided","uniqBy","item","JSON","stringify","className","type","name","accept","onChange","e","readable","target","files","papa","parse","header","complete","data","handleChange","Button","variant","onClick","fileName","d","Date","isoDate","toISOString","slice","dateTime","getHours","getMinutes","getSeconds","formatCsvName","filename","processRow","finalVal","innerValue","toString","toLocaleString","result","replace","search","csvFile","blob","Blob","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToCsv","alert","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.739c1fcd.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button'\nimport papa from 'papaparse'\nimport { uniqBy } from 'lodash'\nimport exportToCsv from './exportToCsv.js'\n\nfunction App() {\n\n  const [matches, setMatches] = useState([])\n  const [fileUploaded, setFileUploaded] = useState(false)\n\n  const handleChange = e => {\n    const { files } = e.target\n    const readable = files[0]\n    setFileUploaded(true)\n    papa.parse(readable, {\n      header: true,\n      complete: data => {\n        setMatches(findMatches(data.data))\n      }\n    });\n  }\n\n  const formatCsvName = () => {\n    const d = new Date()\n    const isoDate = d.toISOString().slice(0, 10)\n    const dateTime = `${isoDate}_${d.getHours()}_${d.getMinutes()}_${d.getSeconds()}`\n    return `matches_${dateTime}.csv`\n  }\n  \n  const handleClick = () => {\n    const fileName = formatCsvName()\n    if (!fileUploaded) {\n      alert(\"Please choose a file.\")\n    } else {\n      exportToCsv(fileName, matches)\n    }\n  }\n\n  // Convert form column headers into variables\n  const email = 'Email Address'\n  const gender = 'I am a'\n  const age = 'I am aged'\n  const gender_pref = 'I am interested in dating a'\n  const age_pref = 'I am interested in dating someone aged '\n  const religion_important = 'It is important that my partner is the same religion as me'\n  const religion = 'What religion are you?'\n  const want_children = 'Do you want to have children?'\n  const mind_children = 'Do you mind if your match has children?'\n  const have_children = 'Do you have children?'\n  const politics_important = 'It is important that my partner has the same political beliefs as I do'\n  const politics = 'If so, my political beliefs are'\n  const city = 'City'\n\n  const ageChoices = ['Early 20s', 'Late 20s', 'Early 30s', 'Late 30s', 'Early 40s', 'Late 40s', '50s+', '60+']\n\n  // TODO: Refactor this function\n  const findMatches = rows => {\n    const matches = rows.map(row1 => {\n      return ([\n        row1[email],\n        rows.filter(row2 => {\n          return (\n            // Cannot match with self\n            (row1[email] !== row2[email]) &&\n            // Match to gender preference\n            (row1[gender_pref] === row2[gender] && row1[gender] === row2[gender_pref]) &&\n            // Same city\n            (row1[city] === row2[city]) &&\n            // Age Preferences\n            (\n              // Females match with their age range + one above\n              row1[gender] === \"Female\" && row2[gender] === \"Male\" ?\n              (\n                (\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age])] ||\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age]) - 1]\n                ) &&  \n                (\n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age])] ||\n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age]) + 1]\n                )\n              ) :\n              row1[gender] === \"Male\" && row2[gender] === \"Female\" ?\n              ( \n                (\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age])] ||\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age]) + 1] \n                ) &&\n                (\n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age])] ||\n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age]) - 1] \n                )\n              ) :\n              row1[gender] === \"Male\" && row2[gender] === \"Male\" ?\n              (\n                (\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age])] ||\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age]) + 1]\n                )\n                 &&\n                (\n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age])] || \n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age]) + 1]\n                )\n              ) :\n              row1[gender] === \"Female\" && row2[gender] === \"Female\" ?\n              (\n                (\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age])] ||\n                  row1[age_pref] === ageChoices[ageChoices.indexOf(row2[age]) - 1]\n                )\n                 &&\n                (\n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age])] || \n                  row2[age_pref] === ageChoices[ageChoices.indexOf(row1[age]) - 1]\n                )\n              ) : true // Non-binary matches are not filtered by age pref\n            ) &&\n            // If either person minds children, their match should not have children\n            (\n              (row1[mind_children] === \"Yes\" ? row2[have_children] === \"No\" : true) &&\n              (row2[mind_children] === \"Yes\" ? row1[have_children] === 'No' : true)\n            ) &&\n            (\n              (row1[religion_important] === 'Yes' || row2[religion_important] === 'Yes') ? \n              row1[religion] === row2[religion] : true\n            ) &&\n            // Moderates can match with whoever\n            (\n              (\n                (row1[politics_important] === 'Yes' && row1[politics] !== 'Moderate') || \n                (row2[politics_important] === 'Yes' && row2[politics] !== 'Moderate')\n              ) ?\n              row1[politics] === row2[politics] : true\n            ) &&\n            // Unsure about wanting children can match with whoever\n            (\n              (row1[want_children] !== \"Unsure\" || row2[want_children] !== \"Unsure\" ) ? \n              row1[want_children] === row2[want_children] : true\n            ) \n          )\n        }).map(row => row[email])\n      ])\n    }).filter(match => match[1].length > 0) // Remove rows with no matches\n\n    console.log(\"matches\", matches)\n\n    // Format as all possible permutations of matches\n    const allPermutations = array => {\n      let output = []\n      for (let i=0; i<array.length; i++) {\n        const a = array[i][0]\n        const b = array[i][1]\n        if (b.length > 1) {\n          for (let j=0; j<b.length; j++) {\n            output.push([a, b[j]])\n          }\n        } else {\n          output.push([a, b[0]])\n        }\n      }\n      return output\n    }   \n\n    const allPerms = allPermutations(matches)           \n    console.log(\"allPerms\", allPerms)\n    // Only include one side of matches\n    const oneSided = output => {\n      for (let i=0; i<output.length; i++) {\n        for (let j=0; j<output.length; j++) {\n          if (output[i][0] === output[j][1] && output[i][1] === output[j][0]) {\n            output.splice(output.indexOf(output[j]), 1)\n          }\n        }\n      }\n      return output\n    }\n    \n    const oneSidedOutput = oneSided(allPerms)\n    console.log(\"oneSidedOutput\", oneSidedOutput)\n\n    // Only include unique entries\n    console.log(\"unique oneSidedOutput\", uniqBy(oneSidedOutput, item => JSON.stringify(item)))\n    return uniqBy(oneSidedOutput, item => JSON.stringify(item))\n  } \n\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <h1>#CFNC Matches</h1>\n        <div className=\"input\">\n          <input type=\"file\" name=\"file\" accept=\".csv\" onChange={e => handleChange(e)}/>\n          <Button variant=\"success\" onClick={handleClick}>\n            Download Matches\n          </Button> \n        </div>\n        <h4>Matching Criteria:</h4>\n        <div className=\"criteria\"> \n          <ol>\n            <li>Gender Preference</li>\n              <ol type='I'>\n                <li>Gender of match should equal gender preference.</li>\n              </ol>  \n            <li>Age preference</li>\n              <ol type='I'>\n                <li>Female: Age of their match should equal their age preference or one group older.</li>\n                <li>Male: Age of their match should equal their age preference or one group younger.</li>\n                <li>Non-binary: No age filter applied.</li>\n              </ol>\n            <li>City</li>  \n            <li>If either person minds children, their match should not have children.</li>\n            <li>If answer to \"Wants children?\" is \"Yes\" or \"No\", match on this criteria. If \"Unsure\", ignore this criteria.</li>\n            <li>Religion</li>\n              <ol type='I'>\n                <li>If religion is important to either person, match on religion.</li>\n              </ol> \n            <li>Politics</li>\n              <ol type='I'>\n                <li>If politics is important to either person AND that person is NOT a Moderate, match on politics. Else ignore this criteria.</li>\n              </ol> \n          </ol>\n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default App\n","export default function exportToCsv(filename, rows) {\n  const processRow = function (row) {\n    var finalVal = '';\n    for (var j = 0; j < row.length; j++) {\n      var innerValue = row[j] === null ? '' : row[j].toString();\n      if (row[j] instanceof Date) {\n          innerValue = row[j].toLocaleString();\n      };\n      var result = innerValue.replace(/\"/g, '\"\"');\n      if (result.search(/(\"|,|\\n)/g) >= 0)\n          result = '\"' + result + '\"';\n      if (j > 0)\n          finalVal += ',';\n      finalVal += result;\n    }\n    return finalVal + '\\n';\n  };\n\n  var csvFile = '';\n  for (var i = 0; i < rows.length; i++) {\n    csvFile += processRow(rows[i]);\n  }\n\n  var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) { // IE 10+\n      navigator.msSaveBlob(blob, filename);\n  } else {\n    var link = document.createElement(\"a\");\n    if (link.download !== undefined) { // feature detection\n      // Browsers that support HTML5 download attribute\n      var url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}\n\n// Credit: https://jsfiddle.net/jossef/m3rrLzk0/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}