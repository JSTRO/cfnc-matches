{"version":3,"sources":["App.js","exportToCsv.js","index.js"],"names":["App","useState","matches","setMatches","email","age_pref","religion_important","children","politics_important","politics","findMatches","rows","map","row1","filter","row2","row","match","length","output","i","a","b","j","push","uniqBy","item","JSON","stringify","splice","indexOf","unshift","className","type","name","accept","onChange","e","readable","target","files","papa","parse","header","complete","data","handleChange","Button","variant","onClick","alert","filename","processRow","finalVal","innerValue","toString","Date","toLocaleString","result","replace","search","csvFile","blob","Blob","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToCsv","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.879e6ce0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button'\nimport papa from 'papaparse'\nimport { uniqBy } from 'lodash'\nimport exportToCsv from './exportToCsv.js'\n\nfunction App() {\n\n  const [matches, setMatches] = useState([])\n\n  const handleChange = e => {\n    const { files } = e.target\n    const readable = files[0]\n    papa.parse(readable, {\n      header: true,\n      complete: data => {\n        setMatches(findMatches(data.data))\n      }\n    });\n  }\n  \n  const handleClick = () => {\n    if (matches.length < 1) {\n      alert(\"Please choose a file.\")\n    } else {\n      exportToCsv('download.csv', matches)\n    }\n  }\n\n  // Convert form column headers into variables\n  const email = 'Email Address'\n  const gender = 'I am a'\n  const age = 'I am aged'\n  const gender_pref = 'I am interested in dating a'\n  const age_pref = 'I am interested in dating someone aged '\n  const religion_important = 'It is important that my partner is the same religion as me'\n  const religion = 'What religion are you?'\n  const children = 'Do you want to have children?'\n  const politics_important = 'It is important that my partner has the same political beliefs as I do'\n  const politics = 'If so, my political beliefs are'\n\n  const findMatches = rows => {\n    const matches = rows.map(row1 => {\n      return ([\n        row1[email],\n        rows.filter(row2 => {\n          return (\n            (row1[email] !== row2[email]) && // Cannot match with yourself\n            (row1[gender_pref] === row2[gender]) && \n            (row1[gender] === row2[gender_pref]) &&\n            (row1[age_pref] === row2[age]) && \n            (row1[age] === row2[age_pref]) &&\n            ((row1[religion_important] === 'Yes' || row2[religion_important] === 'Yes') ? row1[religion] === row2[religion] : null) &&\n            ((row1[politics_important] === 'Yes' || row2[politics_important] === 'Yes') ? row1[politics] === row2[politics] : null) &&\n            (row1[children] === row2[children]) \n          )\n        }).map(row => row[email])\n      ])\n    }).filter(match => match[1].length > 0) // Remove rows with no matches\n    \n    // Format as all possible matches                 \n    let output = []\n    for (let i=0; i<matches.length; i++) {\n      const a = matches[i][0]\n      const b = matches[i][1]\n      if (b.length > 1) {\n        for (let j=0; j<b.length; j++) {\n          output.push([a, b[j]])\n        }\n      } else {\n        output.push([a, b[0]])\n      }\n    }\n\n    // Only include unique entries\n    output = uniqBy(output, item => JSON.stringify(item))\n    \n    // Only include one side of matches\n    for (let i=0; i<output.length; i++) {\n      for (let j=0; j<output.length; j++) {\n        if (output[i][0] === output[j][1] && output[i][1] === output[j][0]) {\n          output.splice(output.indexOf(output[j]), 1)\n        }\n      }\n    }\n\n    // Add headers\n    output.unshift(['1', '2'])\n\n    return output\n  } \n\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <h1>#CFNC Matches</h1>\n        <div className=\"input\">\n          <input type=\"file\" name=\"file\" accept=\".csv\" onChange={e => handleChange(e)}/>\n          <Button variant=\"success\" onClick={handleClick}>\n            Download Matches\n          </Button> \n        </div>\n      </div>  \n    </div>\n  )\n}\n\nexport default App;\n","export default function exportToCsv(filename, rows) {\n  const processRow = function (row) {\n    var finalVal = '';\n    for (var j = 0; j < row.length; j++) {\n      var innerValue = row[j] === null ? '' : row[j].toString();\n      if (row[j] instanceof Date) {\n          innerValue = row[j].toLocaleString();\n      };\n      var result = innerValue.replace(/\"/g, '\"\"');\n      if (result.search(/(\"|,|\\n)/g) >= 0)\n          result = '\"' + result + '\"';\n      if (j > 0)\n          finalVal += ',';\n      finalVal += result;\n    }\n    return finalVal + '\\n';\n  };\n\n  var csvFile = '';\n  for (var i = 0; i < rows.length; i++) {\n    csvFile += processRow(rows[i]);\n  }\n\n  var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) { // IE 10+\n      navigator.msSaveBlob(blob, filename);\n  } else {\n    var link = document.createElement(\"a\");\n    if (link.download !== undefined) { // feature detection\n      // Browsers that support HTML5 download attribute\n      var url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}\n\n// Credit: https://jsfiddle.net/jossef/m3rrLzk0/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}